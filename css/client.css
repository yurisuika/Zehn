/* INPUT */
.DialogTextInputBase, .DialogTextInputBase:not(disabled):hover {
  background: rgb(var(--color-entry)) !important;
  border-radius: 0px !important;
}

.DialogTextInputBase:disabled, .DialogTextInputBase:read-only {
  background: rgb(var(--color-entry)) !important;
}

.DialogInputRequirementLabel {
  color: rgb(var(--color-text)) !important;
}

/* TITLES */
.DialogHeader {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-title) !important;
}

.DialogHeaderSubtitle {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-subtitle) !important;
}

.DialogHighlight {
  color: rgb(var(--color-accent)) !important;
}

.DialogSubHeader {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-header) !important;
}

/* SUBTITLES */
.DialogLabel, .DialogLabelStrong {
  color: rgb(var(--color-text-sub)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.ChatRoomNotificationSettingsDialog .DialogFooter {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

/* TEXT */
.DialogBodyText {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.DialogDropDown {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.DialogButton {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.DialogInput {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.DialogBody {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.DialogToggle_Label {
  color: rgb(var(--color-text)) !important;
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

/* TABLES */
.DialogSpanningTable.BannedUsersTable tr.hoverRow, .DialogSpanningTable.InvitedUsersTable tr.hoverRow, .DialogSpanningTable.InviteLinksTable tbody tr {
  background: rgba(var(--color-white), 0.1) !important;
}

/* STATUS */
[class*="personanameandstatus_playerName_"] {
  font-weight: normal !important;
  font-size: var(--font-size-text) !important;
}

.ingame [class*="personanameandstatus_playerName_"] {
  color: rgb(var(--color-ingame)) !important;
}

.online [class*="personanameandstatus_playerName_"] {
  color: rgb(var(--color-online)) !important;
}

.offline [class*="personanameandstatus_playerName_"] {
  color: rgb(var(--color-offline)) !important;
}

.friend.ingame {
  color: rgb(var(--color-ingame)) !important;
}

.friend.online {
  color: rgb(var(--color-online)) !important;
}

.friend.offline {
  color: rgb(var(--color-offline)) !important;
}

/* ICON */
.ModalPosition_Content {
  color: rgb(var(--color-white)) !important;
}

/* LABELHOLDER */
[class*="personanameandstatus_noContextMenu_"] {
  font-weight: normal !important;
}

/* STATUS INFO */
[class*="personanameandstatus_gameName_"] {
  font-weight: normal !important;
  font-size: var(--font-size-sub) !important;
}

.ingame [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"], .ingame [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a, .ingame [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:hover, .ingame [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:active, .ingame [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:visited, .ingame [class*="personanameandstatus_twoLine_"][class*="personanameandstatus_richPresenceLabel_"] {
  color: rgb(var(--color-ingame)) !important;
}

.online [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"], .online [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a, .online [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:hover, .online [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:active, .online [class*="personanameandstatus_gameName_"][class*="personanameandstatus_richPresenceLabel_"] a:visited, .online [class*="personanameandstatus_twoLine_"][class*="personanameandstatus_richPresenceLabel_"] {
  color: rgb(var(--color-online)) !important;
}

[class*="personanameandstatus_richPresenceLabel_"] {
  font-weight: normal !important;
  font-size: var(--font-size-sub) !important;
}

.ingame.awayOrSnooze [class*="personanameandstatus_richPresenceLabel_"], .ingame [class*="personanameandstatus_richPresenceLabel_"], .ingame [class*="personanameandstatus_richPresenceLabel_"] a, .ingame [class*="personanameandstatus_richPresenceLabel_"] a:hover, .ingame [class*="personanameandstatus_richPresenceLabel_"] a:active, .ingame [class*="personanameandstatus_richPresenceLabel_"] a:visited {
  color: rgb(var(--color-ingame)) !important;
}

.online.awayOrSnooze [class*="personanameandstatus_richPresenceLabel_"], .online [class*="personanameandstatus_richPresenceLabel_"], .online [class*="personanameandstatus_richPresenceLabel_"] a, .online [class*="personanameandstatus_richPresenceLabel_"] a:hover, .online [class*="personanameandstatus_richPresenceLabel_"] a:active, .online [class*="personanameandstatus_richPresenceLabel_"] a:visited {
  color: rgb(var(--color-online)) !important;
}

.offline.awayOrSnooze [class*="personanameandstatus_richPresenceLabel_"], .offline [class*="personanameandstatus_richPresenceLabel_"], .offline [class*="personanameandstatus_richPresenceLabel_"] a, .offline [class*="personanameandstatus_richPresenceLabel_"] a:hover, .offline [class*="personanameandstatus_richPresenceLabel_"] a:active, .offline [class*="personanameandstatus_richPresenceLabel_"] a:visited {
  color: rgb(var(--color-offline)) !important;
}

/* STATUS SNOOZE */
[class*="friendsnooze_SnoozeContainer_"].in-game [class*="friendsnooze_SnoozeZ_"] {
  color: rgb(var(--color-ingame)) !important;
}

[class*="friendsnooze_SnoozeContainer_"].online [class*="friendsnooze_SnoozeZ_"] {
  color: rgb(var(--color-online)) !important;
}

.awayOrSnooze [class*="steamavatar_avatarStatus_"] {
  opacity: 1 !important;
}

.friend.awayOrSnooze .labelHolder {
  opacity: 1 !important;
}

/* STATUS ICONS */
[class*="personastatusicons_PersonaStatusIcon_"].ingame .SVGIcon_VR path, [class*="personastatusicons_PersonaStatusIcon_"].ingame .SVGIcon_MobilePhone path, [class*="personastatusicons_PersonaStatusIcon_"].ingame .SVGIcon_BigPicture path {
  fill: rgb(var(--color-ingame)) !important;
}

[class*="personastatusicons_PersonaStatusIcon_"].online .SVGIcon_VR path, [class*="personastatusicons_PersonaStatusIcon_"].online .SVGIcon_MobilePhone path, [class*="personastatusicons_PersonaStatusIcon_"].online .SVGIcon_BigPicture path {
  fill: rgb(var(--color-online)) !important;
}

[class*="personastatusicons_PersonaStatusIcon_"].ingame .SVGIcon_Button path {
  fill: rgb(var(--color-ingame)) !important;
}

[class*="personastatusicons_PersonaStatusIcon_"].online .SVGIcon_Button path {
  fill: rgb(var(--color-online)) !important;
}

/* STATUS CONTEXT CHEVRON */
:not(.friendInviteContainer) .ingame .ContextMenuButton .SVGIcon_DownArrowContextMenu {
  fill: rgb(var(--color-ingame)) !important;
}

:not(.friendInviteContainer) .online .ContextMenuButton .SVGIcon_DownArrowContextMenu {
  fill: rgb(var(--color-online)) !important;
}

:not(.friendInviteContainer) .offline .ContextMenuButton .SVGIcon_DownArrowContextMenu {
  fill: rgb(var(--color-offline)) !important;
}

/* STATUS LINE */
.ingame .steamavatar_avatarStatus_1yIzy {
  background: rgb(var(--color-ingame)) !important;
}

.online .steamavatar_avatarStatus_1yIzy {
  background: rgb(var(--color-online)) !important;
}

.offline .steamavatar_avatarStatus_1yIzy {
  background: rgb(var(--color-offline)) !important;
}

/* LIST ITEM */
.DialogListBuilderInput_ListItem {
  margin-right: 8px !important;
}

/* LINK */
.DialogBody a {
  color: rgb(var(--color-accent)) !important;
}

.DialogBody a:hover {
  color: rgb(var(--color-text-sub)) !important;
}

.DialogBody a:active {
  color: rgb(var(--color-text-disabled)) !important;
}

/* BUTTON */
button.DialogButton {
  background: rgba(var(--color-white), 0.2) !important;
  color: rgb(var(--color-white)) !important;
  border-radius: 0px !important;
}

button.DialogButton::before {
  box-shadow: 0 0 0 0 transparent !important;
}

button.DialogButton:hover, button.DialogButton.gpfocus {
  background: rgba(var(--color-white), 0.3) !important;
  color: rgb(var(--color-white)) !important;
  outline: 2px solid rgba(var(--color-white), 0.5) !important;
  outline-offset: -2px !important;
}

button.DialogButton:enabled:active, button.DialogButton:enabled:active.gpfocus {
  background: rgba(var(--color-white), 0.4) !important;
  color: rgb(var(--color-white)) !important;
  outline: 2px solid transparent !important;
  outline-offset: -2px !important;
}

button.DialogButton:disabled, button.DialogButton:disabled:hover, button.DialogButton.Disabled, button.DialogButton.Disabled:hover {
  background: rgba(var(--color-white), 0.05) !important;
  color: rgb(var(--color-text-sub)) !important;
}

button.DialogButton.Primary:enabled:active, button.DialogButton.Primary:enabled:hover:active, button.DialogButton.Primary:enabled:active.gpfocus {
  background: rgba(var(--color-white), 0.4) !important;
  color: rgb(var(--color-white)) !important;
}

/* RADIO */
[class*="radio_Button_"][class*="radio_Active_"], [class*="radio_Button_"][class*="radio_Active_"]:hover {
  background-color: rgb(var(--color-accent)) !important;
  color: rgb(var(--color-text)) !important;
}

[class*="radio_Button_"] {
  background-color: transparent !important;
  border-radius: 0px !important;
}

[class*="radio_Button_"]:hover {
  background-color: rgba(var(--color-white), 0.1) !important;
}

[class*="radio_Button_"]:active {
  background-color: rgba(var(--color-white), 0.2) !important;
}

[class*="radio_Group_"] {
  background-color: rgba(var(--color-white), 0.1) !important;
  border-radius: 0px !important;
}

/* CHECKBOX */
.DialogCheckbox {
  width: 16px !important;
  height: 16px !important;
  border-radius: 0px !important;
  border: 2px solid rgba(var(--color-white), 0.8) !important;
  background-color: transparent !important;
}

.DialogCheckbox:not(.Active):hover {
  border: 2px solid rgb(var(--color-white)) !important;
}

.DialogCheckbox:not(.Active):active {
  border: 2px solid transparent !important;
  background-color: rgba(var(--color-white), 0.6) !important;
}

.DialogCheckbox.Active {
  border: 2px solid rgb(var(--color-accent)) !important;
  background-color: rgb(var(--color-accent)) !important;
}

.DialogCheckbox.Active:hover {
  border: 2px solid rgb(var(--color-white)) !important;
}

.DialogCheckbox.Active:active {
  border: 2px solid transparent !important;
  background-color: rgba(var(--color-white), 0.6) !important;
}

.DialogCheckbox .SVGIcon_DialogCheck {
  stroke: transparent !important;
  width: 16px !important;
  height: 16px !important;
  margin-top: 0px !important;
  margin-left: 0px !important;
}

.DialogCheckbox.Active .SVGIcon_DialogCheck {
  stroke: rgb(var(--color-white)) !important;
  margin-bottom: 1px !important; /* FOR SOME REASON THIS IS MOVED DOWN 1PX */
}

.DialogCheckbox .SVGIcon_DialogCheck path {
  stroke-width: 20px !important;
  stroke: rgb(var(--color-white)) !important;
  color: rgb(var(--color-white)) !important;
}

/* TOGGLE */
[class*="gamepaddialog_ToggleRail_"] {
  background: transparent !important;
  border-radius: 9001px !important;
}

[class*="gamepaddialog_ToggleRail_"]::before {
  background: rgb(var(--color-accent)) !important;
  transform: translateX(-40px);
  content: "" !important;
}

[class*="gamepaddialog_ToggleRail_"]::after {
  background: rgb(var(--color-accent)) !important;
}

[class*="gamepaddialog_Toggle_"] {
  width: 40px !important;
  height: 16px !important;
  position: relative !important;
  margin-right: 4px !important;
}

[class*="gamepaddialog_Toggle_"] {
  border: 2px solid rgba(var(--color-white), 0.8) !important;
  border-radius: 9001px !important;
}

[class*="gamepaddialog_Toggle_"][class*="gamepaddialog_On_"] {
  border: 2px solid rgb(var(--color-accent)) !important;
  border-radius: 9001px !important;
}

[class*="gamepaddialog_ToggleSwitch_"] {
  width: 10px !important;
  height: 10px !important;
  margin-top: 3px !important;
  margin-left: 3px !important;
  color: rgba(var(--color-white), 0.8) !important;
}

[class*="gamepaddialog_Toggle_"][class*="gamepaddialog_On_"] [class*="gamepaddialog_ToggleSwitch_"] {
  transform: translateX(24px);
  color: rgb(var(--color-white)) !important;
}

[class*="gamepaddialog_Toggle_"][class*="gamepaddialog_On_"] [class*="gamepaddialog_ToggleRail_"]::before {
  transform: translateX(0px) !important;
}

/* DROPDOWN */
.DialogTextInputBase, ._DialogInputContainer:not([class*="dropdown_DialogDropDownMenu_"]) {
  color: rgb(var(--color-text)) !important;
  background: transparent !important;
  border-radius: 0px !important;
  outline: 2px solid rgba(var(--color-white), 0.5) !important;
  outline-offset: -2px !important;
}

.DialogTextInputBase:hover, ._DialogInputContainer:hover:not([class*="dropdown_DialogDropDownMenu_"]) {
  background: transparent !important;
  outline: 2px solid rgba(var(--color-white), 0.65) !important;
  outline-offset: -2px !important;
}

.DialogTextInputBase:active, ._DialogInputContainer:active:not([class*="dropdown_DialogDropDownMenu_"]) {
  background: rgba(var(--color-white), 0.3) !important;
  outline: 2px solid rgba(var(--color-white), 0.5) !important;
  outline-offset: -2px !important;
}

.DialogDropDown_Arrow .SVGIcon_DownArrowContextMenu {
  fill: rgb(var(--color-white)) !important;
}

[class*="dropdown_DialogDropDownMenu_"]._DialogInputContainer {
  background: transparent !important;
  border-radius: 0px !important;
  margin-top: 0px !important;
  margin-bottom: 0px !important;
  padding: 0px !important;
  border: 1px solid rgba(var(--color-white), 0.05) !important;
  background-color: rgba(var(--color-white), 0.1) !important;
  backdrop-filter: blur(40px) !important;
  background-blend-mode: exclusion !important;
  background-image: var(--image-acrylic) !important;
}

[class*="dropdown_DialogDropDownMenu_"]._DialogInputContainer::before, [class*="dropdown_DialogDropDownMenu_"]._DialogInputContainer::after {
  /* content: "" !important;
  position: absolute !important;
  z-index: -1 !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important; */
  /* background-color: rgba(var(--color-white), 0.1) !important;
  backdrop-filter: blur(40px) !important;
  background-blend-mode: exclusion !important;
  background-image: var(--image-acrylic) !important; */
}

[class*="dropdown_DialogDropDownMenu_"]._DialogInputContainer::before {
  /* background-color: rgba(var(--color-white), 0.1) !important;
  backdrop-filter: blur(40px) !important;
  background-blend-mode: exclusion !important; */
}

[class*="dropdown_DialogDropDownMenu_"]._DialogInputContainer::after {
  /* background-image: var(--image-acrylic) !important; */
}

[class*="dropdown_DialogDropDownMenu_Item_"] {
  background: transparent !important;
  margin: 1px !important;
}

[class*="dropdown_DialogDropDownMenu_Item_"]:hover {
  background: rgba(var(--color-white), 0.1) !important
}

[class*="dropdown_DialogDropDownMenu_Item_"]:active {
  background: rgba(var(--color-white), 0.2) !important
}

[class*="dropdown_DialogDropDownMenu_Item_"]:first-child {
  margin-top: 5px !important;
}

[class*="dropdown_DialogDropDownMenu_Item_"]:last-child {
  margin-bottom: 5px !important;
}

.DialogDropDown_Arrow.DesktopUI, .DesktopUI .DialogDropDown_Arrow {
  opacity: 0.6 !important;
}

/* CONNECTION TROUBLE */
.ConnectionTrouble .ConnectionTroubleContent {
  background: rgb(var(--color-accent)) !important;
}

.ConnectionTroubleContent .ConnectionTroubleMessage, .ConnectionTroubleContent .ConnectionTroubleReconnectMessage {
  color: rgb(var(--color-text)) !important;
  font-size: var(--font-size-section) !important;
}